import React from 'react';

interface IconProps {
  className?: string;
  size?: number;
  color?: string;
}

export const DashboardIcon: React.FC<IconProps> = ({ className = "", size = 20, color }) => {
  return (
    <svg 
      width={size} 
      height={size} 
      viewBox="0 0 24 24" 
      fill="none" 
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path 
        d="M16 5C16 4.068 16 3.602 16.152 3.235C16.2525 2.99218 16.3999 2.77155 16.5857 2.58572C16.7716 2.3999 16.9922 2.25251 17.235 2.152C17.602 2 18.068 2 19 2C19.932 2 20.398 2 20.765 2.152C21.0078 2.25251 21.2284 2.3999 21.4143 2.58572C21.6001 2.77155 21.7475 2.99218 21.848 3.235C22 3.602 22 4.068 22 5V9C22 9.932 22 10.398 21.848 10.765C21.7475 11.0078 21.6001 11.2284 21.4143 11.4143C21.2284 11.6001 21.0078 11.7475 20.765 11.848C20.398 12 19.932 12 19 12C18.068 12 17.602 12 17.235 11.848C16.9922 11.7475 16.7716 11.6001 16.5857 11.4143C16.3999 11.2284 16.2525 11.0078 16.152 10.765C16 10.398 16 9.932 16 9V5ZM16 19C16 18.068 16 17.602 16.152 17.235C16.2525 16.9922 16.3999 16.7716 16.5857 16.5857C16.7716 16.3999 16.9922 16.2525 17.235 16.152C17.602 16 18.068 16 19 16C19.932 16 20.398 16 20.765 16.152C21.0078 16.2525 21.2284 16.3999 21.4143 16.5857C21.6001 16.7716 21.7475 16.9922 21.848 17.235C22 17.602 22 18.068 22 19C22 19.932 22 20.398 21.848 20.765C21.7475 21.0078 21.6001 21.2284 21.4143 21.4143C21.2284 21.6001 21.0078 21.7475 20.765 21.848C20.398 22 19.932 22 19 22C18.068 22 17.602 22 17.235 21.848C16.9922 21.7475 16.7716 21.6001 16.5857 21.4143C16.3999 21.2284 16.2525 21.0078 16.152 20.765C16 20.398 16 19.932 16 19ZM2 16C2 14.114 2 13.172 2.586 12.586C3.172 12 4.114 12 6 12H8C9.886 12 10.828 12 11.414 12.586C12 13.172 12 14.114 12 16V18C12 19.886 12 20.828 11.414 21.414C10.828 22 9.886 22 8 22H6C4.114 22 3.172 22 2.586 21.414C2 20.828 2 19.886 2 18V16ZM2 5C2 4.068 2 3.602 2.152 3.235C2.25251 2.99218 2.3999 2.77155 2.58572 2.58572C2.77155 2.3999 2.99218 2.25251 3.235 2.152C3.602 2 4.068 2 5 2H9C9.932 2 10.398 2 10.765 2.152C11.0078 2.25251 11.2284 2.3999 11.4143 2.58572C11.6001 2.77155 11.7475 2.99218 11.848 3.235C12 3.602 12 4.068 12 5C12 5.932 12 6.398 11.848 6.765C11.7475 7.00782 11.6001 7.22845 11.4143 7.41428C11.2284 7.6001 11.0078 7.74749 10.765 7.848C10.398 8 9.932 8 9 8H5C4.068 8 3.602 8 3.235 7.848C2.99218 7.74749 2.77155 7.6001 2.58572 7.41428C2.3999 7.22845 2.25251 7.00782 2.152 6.765C2 6.398 2 5.932 2 5Z" 
        stroke={color || "currentColor"} 
        strokeWidth="1.5" 
        strokeLinecap="round" 
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const HomeIcon: React.FC<IconProps> = ({ className = "", size = 20 }) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      width={size} 
      height={size} 
      viewBox="0 0 24 24" 
      fill="none" 
      stroke="currentColor" 
      strokeWidth="1.5"
      className={className}
    >
      <path d="M3 9l9-7 9 7v11a2 2 0 01-2 2H5a2 2 0 01-2-2V9z" />
      <path d="M9 22V12h6v10" />
    </svg>
  );
};

export const UsersIcon: React.FC<IconProps> = ({ className = "", size = 20, color }) => {
  return (
    <svg 
      width={size} 
      height={size} 
      viewBox="0 0 24 24" 
      fill="none" 
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path 
        d="M20.7738 18C21.5238 18 22.1188 17.529 22.6538 16.87C23.7498 15.52 21.9508 14.44 21.2648 13.913C20.5678 13.376 19.7888 13.071 18.9998 13M17.9998 11C18.6628 11 19.2987 10.7366 19.7675 10.2678C20.2364 9.79893 20.4998 9.16304 20.4998 8.5C20.4998 7.83696 20.2364 7.20107 19.7675 6.73223C19.2987 6.26339 18.6628 6 17.9998 6M3.22578 18C2.47578 18 1.88078 17.529 1.34578 16.87C0.249781 15.52 2.04878 14.44 2.73478 13.913C3.43178 13.376 4.20978 13.07 4.99978 13M5.49978 11C4.83674 11 4.20086 10.7366 3.73201 10.2678C3.26317 9.79893 2.99978 9.16304 2.99978 8.5C2.99978 7.83696 3.26317 7.20107 3.73201 6.73223C4.20086 6.26339 4.83674 6 5.49978 6M8.08378 15.111C7.06178 15.743 4.38278 17.033 6.01378 18.647C6.81278 19.436 7.69978 20 8.81678 20H15.1848C16.3018 20 17.1888 19.436 17.9858 18.647C19.6178 17.033 16.9388 15.743 15.9168 15.111C14.7396 14.385 13.3838 14.0005 12.0008 14.0005C10.6177 14.0005 9.26194 14.385 8.08478 15.111M15.4998 7.5C15.4998 7.95963 15.4093 8.41475 15.2334 8.83939C15.0575 9.26403 14.7997 9.64987 14.4747 9.97487C14.1496 10.2999 13.7638 10.5577 13.3392 10.7336C12.9145 10.9095 12.4594 11 11.9998 11C11.5402 11 11.085 10.9095 10.6604 10.7336C10.2357 10.5577 9.84991 10.2999 9.52491 9.97487C9.1999 9.64987 8.94209 9.26403 8.7662 8.83939C8.59031 8.41475 8.49978 7.95963 8.49978 7.5C8.49978 6.57174 8.86853 5.6815 9.52491 5.02513C10.1813 4.36875 11.0715 4 11.9998 4C12.928 4 13.8183 4.36875 14.4747 5.02513C15.131 5.6815 15.4998 6.57174 15.4998 7.5Z" 
        stroke={color || "currentColor"} 
        strokeWidth="1.5" 
        strokeLinecap="round" 
        strokeLinejoin="round"
      />
    </svg>
  );
};

export const FloodWatchIcon: React.FC<IconProps> = ({ className = "", size = 20, color }) => {
  return (
    <svg 
      width={size} 
      height={size} 
      viewBox="0 0 23 23" 
      fill="none" 
      xmlns="http://www.w3.org/2000/svg"
      className={className}
    >
      <path 
        d="M20.8438 20.125C20.5983 20.124 20.355 20.0798 20.125 19.9942V19.9899C19.7883 19.8471 19.484 19.6377 19.2304 19.3742C18.9768 19.1107 18.7792 18.7987 18.6494 18.4568C18.6041 18.3127 18.5133 18.1872 18.3905 18.0992C18.2678 18.0111 18.1198 17.9654 17.9688 17.9687C17.8181 17.9698 17.6715 18.0177 17.5493 18.1057C17.4271 18.1938 17.3353 18.3178 17.2867 18.4604C17.1273 18.924 16.8338 19.3297 16.4433 19.6261C16.0529 19.9225 15.5831 20.0962 15.0938 20.125C14.6037 20.0962 14.1333 19.9221 13.7425 19.625C13.3518 19.3279 13.0582 18.9213 12.8994 18.4568C12.8521 18.3139 12.7608 18.1897 12.6385 18.102C12.5162 18.0143 12.3692 17.9677 12.2188 17.9687C12.0681 17.9698 11.9215 18.0177 11.7993 18.1057C11.6771 18.1938 11.5853 18.3178 11.5367 18.4604C11.3773 18.924 11.0838 19.3297 10.6933 19.6261C10.3029 19.9225 9.83312 20.0962 9.34375 20.125C8.8537 20.0962 8.38332 19.9221 7.99254 19.625C7.60175 19.3279 7.30824 18.9213 7.14941 18.4568C7.1011 18.3141 7.00922 18.1903 6.88673 18.1027C6.76424 18.0151 6.61733 17.9682 6.46674 17.9686C6.31615 17.969 6.16949 18.0166 6.04746 18.1049C5.92543 18.1931 5.83421 18.3175 5.78666 18.4604C5.62733 18.924 5.33379 19.3297 4.94333 19.6261C4.55287 19.9225 4.08312 20.0962 3.59375 20.125H1.4375V21.5625H3.59375C4.15155 21.5675 4.70267 21.4408 5.20225 21.1927C5.70184 20.9445 6.13577 20.5819 6.46875 20.1343C6.80525 20.5781 7.23991 20.9379 7.73869 21.1857C8.23747 21.4334 8.78683 21.5623 9.34375 21.5623C9.90067 21.5623 10.45 21.4334 10.9488 21.1857C11.4476 20.9379 11.8822 20.5781 12.2188 20.1343C12.5553 20.5781 12.9899 20.9379 13.4887 21.1857C13.9875 21.4334 14.5368 21.5623 15.0938 21.5623C15.6507 21.5623 16.2 21.4334 16.6988 21.1857C17.1976 20.9379 17.6322 20.5781 17.9688 20.1343C18.3689 20.6516 18.8992 21.0534 19.5054 21.2987C19.9295 21.4748 20.3845 21.5645 20.8438 21.5625H21.5625V20.125H20.8438ZM20.125 9.79655L21.3878 10.7812L22.2812 9.65136L11.9399 1.5913C11.8123 1.49187 11.6552 1.43787 11.4935 1.43787C11.3318 1.43787 11.1747 1.49187 11.0472 1.5913L0.71875 9.64489L1.61216 10.7748L2.875 9.79008V13.519C2.60559 14.1704 2.08854 14.6882 1.4375 14.9586V16.4565C2.29732 16.2836 3.06422 15.8022 3.59375 15.1031C3.93025 15.5468 4.36491 15.9067 4.86369 16.1544C5.36247 16.4022 5.91183 16.5311 6.46875 16.5311C7.02567 16.5311 7.57503 16.4022 8.07381 16.1544C8.57259 15.9067 9.00725 15.5468 9.34375 15.1031C9.68025 15.5468 10.1149 15.9067 10.6137 16.1544C11.1125 16.4022 11.6618 16.5311 12.2188 16.5311C12.7757 16.5311 13.325 16.4022 13.8238 16.1544C14.3226 15.9067 14.7572 15.5468 15.0938 15.1031C15.4267 15.5506 15.8607 15.9132 16.3602 16.1614C16.8598 16.4096 17.4109 16.5363 17.9688 16.5312H21.5625V15.0937H20.125V9.79655ZM15.7758 13.4284C15.7283 13.2855 15.6371 13.1612 15.515 13.0729C15.393 12.9847 15.2464 12.937 15.0958 12.9366C14.9452 12.9362 14.7983 12.9831 14.6758 13.0707C14.5533 13.1583 14.4614 13.2822 14.4131 13.4248C14.2544 13.8894 13.9609 14.2963 13.5701 14.5935C13.1793 14.8907 12.7089 15.0649 12.2188 15.0937C11.7294 15.0649 11.2596 14.8913 10.8692 14.5949C10.4787 14.2985 10.1852 13.8927 10.0258 13.4291C9.97722 13.2865 9.88544 13.1626 9.76322 13.0745C9.641 12.9864 9.4944 12.9385 9.34375 12.9375C9.19327 12.9364 9.04631 12.9831 8.92401 13.0708C8.80171 13.1584 8.71036 13.2826 8.66309 13.4255C8.50426 13.89 8.21075 14.2967 7.81996 14.5938C7.42918 14.8909 6.9588 15.0649 6.46875 15.0937C5.9944 15.0718 5.53698 14.9108 5.15335 14.631C4.76973 14.3511 4.47682 13.9647 4.31106 13.5197L4.3125 8.66955L11.4935 3.07049L18.6875 8.67674L18.6889 15.0937H17.9688C17.4794 15.0649 17.0096 14.8913 16.6192 14.5949C16.2287 14.2985 15.9352 13.892 15.7758 13.4284Z" 
        fill={color || "currentColor"}
      />
    </svg>
  );
};

export const LogoutIcon: React.FC<IconProps> = ({ className = "", size = 20, color }) => {
  return (
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      width={size} 
      height={size}
      viewBox="0 0 24 24" 
      fill="none" 
      stroke={color || "currentColor"} 
      strokeWidth="1.5"
      className={className}
    >
      <path strokeLinecap="round" strokeLinejoin="round" d="M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75" />
    </svg>
  );
}; 